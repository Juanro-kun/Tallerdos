// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taller_2_Gestor.Infra;

#nullable disable

namespace Taller_2_Gestor.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("apellido");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mail");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint")
                        .HasColumnName("telefono");

                    b.HasKey("IdCliente");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .HasColumnType("int")
                        .HasColumnName("id_comentario");

                    b.Property<int>("IdPresupuesto")
                        .HasColumnType("int")
                        .HasColumnName("id_presupuesto");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("detalle");

                    b.Property<DateOnly>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdComentario", "IdPresupuesto");

                    b.HasIndex("IdPresupuesto");

                    b.ToTable("comentario", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Equipo", b =>
                {
                    b.Property<int>("IdEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_equipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipo"));

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre");

                    b.HasKey("IdEquipo");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdTipo");

                    b.ToTable("equipo", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.EstadoEquipo", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdEstado");

                    b.ToTable("estado_equipo", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.EstadoItem", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.HasKey("IdEstado");

                    b.ToTable("estado_item", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.EstadoPresupuesto", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdEstado");

                    b.ToTable("estado_presupuesto", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.ItemPresupuesto", b =>
                {
                    b.Property<int>("NFila")
                        .HasColumnType("int")
                        .HasColumnName("n_fila");

                    b.Property<int>("IdPresupuesto")
                        .HasColumnType("int")
                        .HasColumnName("id_presupuesto");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("id_orden");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    b.Property<bool>("Necesario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("necesario")
                        .HasDefaultValueSql("('0')");

                    b.Property<double>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("precio");

                    b.HasKey("NFila", "IdPresupuesto");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdPresupuesto");

                    b.HasIndex("IdServicio");

                    b.ToTable("item_presupuesto", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdMarca");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.OrdenServicio", b =>
                {
                    b.Property<int>("IdPresupuesto")
                        .HasColumnType("int")
                        .HasColumnName("id_presupuesto");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.HasKey("IdPresupuesto");

                    b.ToTable("orden_servicio", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Presupuesto", b =>
                {
                    b.Property<int>("IdPresupuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_presupuesto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPresupuesto"));

                    b.Property<int>("IdAdministrador")
                        .HasColumnType("int")
                        .HasColumnName("id_administrador");

                    b.Property<int>("IdEquipo")
                        .HasColumnType("int")
                        .HasColumnName("id_equipo");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado")
                        .HasDefaultValueSql("('1')");

                    b.Property<int>("IdTecnico")
                        .HasColumnType("int")
                        .HasColumnName("id_tecnico");

                    b.HasKey("IdPresupuesto");

                    b.HasIndex("IdAdministrador");

                    b.HasIndex("IdEquipo");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdTecnico");

                    b.ToTable("presupuesto", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Rol", b =>
                {
                    b.Property<byte>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("id_rol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdRol"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_rol");

                    b.HasKey("IdRol");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre_servicio");

                    b.HasKey("IdServicio");

                    b.ToTable("servicio", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.TipoEquipo", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipo");

                    b.ToTable("tipo_equipo", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("apellido");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contrasena");

                    b.Property<byte>("IdRol")
                        .HasColumnType("tinyint")
                        .HasColumnName("id_rol");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mail");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nombre");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.HasIndex(new[] { "Mail" }, "UQ_usuario_mail")
                        .IsUnique()
                        .HasFilter("[mail] IS NOT NULL");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Comentario", b =>
                {
                    b.HasOne("Taller_2_Gestor.Domain.Entities.Presupuesto", "IdPresupuestoNavigation")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdPresupuesto")
                        .IsRequired()
                        .HasConstraintName("FK_comentario_presupuesto");

                    b.Navigation("IdPresupuestoNavigation");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Equipo", b =>
                {
                    b.HasOne("Taller_2_Gestor.Domain.Entities.Cliente", "IdClienteNavigation")
                        .WithMany("Equipos")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_equipo_cliente");

                    b.HasOne("Taller_2_Gestor.Domain.Entities.EstadoEquipo", "IdEstadoNavigation")
                        .WithMany("Equipos")
                        .HasForeignKey("IdEstado")
                        .IsRequired()
                        .HasConstraintName("FK_equipo_estado");

                    b.HasOne("Taller_2_Gestor.Domain.Entities.Marca", "IdMarcaNavigation")
                        .WithMany("Equipos")
                        .HasForeignKey("IdMarca")
                        .IsRequired()
                        .HasConstraintName("FK_esquipo_marca");

                    b.HasOne("Taller_2_Gestor.Domain.Entities.TipoEquipo", "IdTipoNavigation")
                        .WithMany("Equipos")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK_equipo_tipo");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.ItemPresupuesto", b =>
                {
                    b.HasOne("Taller_2_Gestor.Domain.Entities.EstadoItem", "IdEstadoNavigation")
                        .WithMany("ItemPresupuestos")
                        .HasForeignKey("IdEstado")
                        .IsRequired()
                        .HasConstraintName("FK_item_estado");

                    b.HasOne("Taller_2_Gestor.Domain.Entities.OrdenServicio", "IdOrdenNavigation")
                        .WithMany("ItemPresupuestos")
                        .HasForeignKey("IdOrden")
                        .HasConstraintName("FK_item_orden");

                    b.HasOne("Taller_2_Gestor.Domain.Entities.Presupuesto", "IdPresupuestoNavigation")
                        .WithMany("ItemPresupuestos")
                        .HasForeignKey("IdPresupuesto")
                        .IsRequired()
                        .HasConstraintName("FK_item_presupuesto_presupuesto");

                    b.HasOne("Taller_2_Gestor.Domain.Entities.Servicio", "IdServicioNavigation")
                        .WithMany("ItemPresupuestos")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("FK_item_servicio");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdOrdenNavigation");

                    b.Navigation("IdPresupuestoNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.OrdenServicio", b =>
                {
                    b.HasOne("Taller_2_Gestor.Domain.Entities.Presupuesto", "IdPresupuestoNavigation")
                        .WithOne("OrdenServicio")
                        .HasForeignKey("Taller_2_Gestor.Domain.Entities.OrdenServicio", "IdPresupuesto")
                        .IsRequired()
                        .HasConstraintName("FK__orden_ser__id_pr__05D8E0BE");

                    b.Navigation("IdPresupuestoNavigation");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Presupuesto", b =>
                {
                    b.HasOne("Taller_2_Gestor.Domain.Entities.Usuario", "IdAdministradorNavigation")
                        .WithMany("PresupuestoIdAdministradorNavigations")
                        .HasForeignKey("IdAdministrador")
                        .IsRequired()
                        .HasConstraintName("FK_presupuesto_administrador");

                    b.HasOne("Taller_2_Gestor.Domain.Entities.Equipo", "IdEquipoNavigation")
                        .WithMany("Presupuestos")
                        .HasForeignKey("IdEquipo")
                        .IsRequired()
                        .HasConstraintName("FK_presupuesto_equipo");

                    b.HasOne("Taller_2_Gestor.Domain.Entities.EstadoPresupuesto", "IdEstadoNavigation")
                        .WithMany("Presupuestos")
                        .HasForeignKey("IdEstado")
                        .IsRequired()
                        .HasConstraintName("FK_presupuesto_estado");

                    b.HasOne("Taller_2_Gestor.Domain.Entities.Usuario", "IdTecnicoNavigation")
                        .WithMany("PresupuestoIdTecnicoNavigations")
                        .HasForeignKey("IdTecnico")
                        .IsRequired()
                        .HasConstraintName("FK_presupuesto_tecnico");

                    b.Navigation("IdAdministradorNavigation");

                    b.Navigation("IdEquipoNavigation");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdTecnicoNavigation");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Taller_2_Gestor.Domain.Entities.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK_usuario_rol");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Equipo", b =>
                {
                    b.Navigation("Presupuestos");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.EstadoEquipo", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.EstadoItem", b =>
                {
                    b.Navigation("ItemPresupuestos");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.EstadoPresupuesto", b =>
                {
                    b.Navigation("Presupuestos");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Marca", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.OrdenServicio", b =>
                {
                    b.Navigation("ItemPresupuestos");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Presupuesto", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("ItemPresupuestos");

                    b.Navigation("OrdenServicio");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Servicio", b =>
                {
                    b.Navigation("ItemPresupuestos");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.TipoEquipo", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("Taller_2_Gestor.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("PresupuestoIdAdministradorNavigations");

                    b.Navigation("PresupuestoIdTecnicoNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
